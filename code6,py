class Solution(object):
    def myAtoi(self, s):
        """
        :type s: str
        :rtype: int
        """
         # Step 1: define boundaries
        INT_MAX = 2**31 - 1  # 2147483647
        INT_MIN = -2**31     # -2147483648

        # Step 2: remove leading spaces
        s = s.lstrip()
        if not s:
            return 0

        # Step 3: check sign
        sign = 1
        i = 0
        if s[0] in ['-', '+']:
            if s[0] == '-':
                sign = -1
            i += 1

        # Step 4: read digits
        num = 0
        while i < len(s) and s[i].isdigit():
            num = num * 10 + int(s[i])
            i += 1

        # Step 5: apply sign
        num = num * sign

        # Step 6: clamp to 32-bit range
        if num < INT_MIN:
            return INT_MIN
        if num > INT_MAX:
            return INT_MAX

        return num